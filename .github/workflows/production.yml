name: Deploy to Production Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: create env file
        run: |
          touch .env
          echo DATABASE_URL=${{secrets.DATABASE_URL}} >> .env
          cat .env

          npm i -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run database migrations
        run: yarn run migrate:prod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REPOSITORY }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "./docker-compose.yml"
          target: "~/visiting-card-backend"

      - name: Copy nginx config to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "./visiting-backend.conf"
          target: "/etc/nginx/conf.d/"

      - name: Deploy and ensure HTTPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~/visiting-card-backend

            # Create .env file with all environment variables
            cat > .env << EOL
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            PORT=${{ secrets.PORT }}
            S3_AWS_REGION=${{ secrets.S3_AWS_REGION }}
            S3_AWS_ACCESS_KEY=${{ secrets.S3_AWS_ACCESS_KEY }}
            S3_AWS_SECRET_ACCESS=${{ secrets.S3_AWS_SECRET_ACCESS }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            EOL

            # Restart application containers
            docker-compose down
            docker container prune -f
            docker image prune -f
            docker-compose pull
            docker-compose up -d
            docker ps -a
            docker-compose logs --tail=100 app

            # Reload NGINX to apply new configuration
            sudo nginx -t && sudo systemctl reload nginx

            # Ensure HTTPS with Certbot
            DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
            sudo certbot --nginx -d $DOMAIN_NAME --non-interactive --agree-tos --email ${{ secrets.ADMIN_EMAIL }}

            # Verify the SSL certificate
            # sudo certbot renew --dry-run
